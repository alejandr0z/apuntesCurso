¬øQu√© es la terminal?

La terminal es una herramienta indispensable que cualquier persona en la tecnolog√≠a debe conocer üëÄ. 
Es importante porque:
Te da flexibilidad üìè. Con unos pocos comandos, puedes hacer mucho.
Es mucho m√°s veloz que una interfaz üíª.
Es tu √∫nica opci√≥n si no hay interfaz üòÜ, como para configurar un servidor remoto.
Puedes invocar demonios üëø. Hay que tener cuidado con los comandos.
Espec√≠ficamente, la terminal es una interfaz gr√°fica muy sencilla que simula una l√≠nea de comandos:
TERMINAL: Ventana que muestra el promt. este aloja la shell.
SHELL O LINEA DE COMANDOS: es un programa que toma los comandos y los pasa al sistema operativo para hacer algo
Programa que ejecuta los comandos. Hay varios tipos de shell, pero sirven para lo mismo. La m√°s comunes son 
bash shell o Z shell. En este curso, usaremos la primera üçé.
Es importante comenzar a usar Linux üòü.
Un comando es un programa que se puede ejecutar desde la terminal.

SISTEMA DE ARCHIVOS EN LA TERMINAL 
    (como esta constituida el arbol)

    * / --> Es la raiz del sistema de archivos

COMANDOS TERMINAL, MANIPULANDO ARCHIVOS Y DIRECTORIOS

    * pwd --> para ver la ubicaci√≥n en la que estamos    
    * ls --> para listar 
    * ls -l --> me lista los archivos con su tama√±o en bites
    * ls -lh --> me lista los archivos con su tama√±o entendible por el ser humano
    * ls -a --> Mostrar todos los archivos, incluso los ocultos
    * ls -la --> Ver todos los archivos incluso los ocultos
    * ls -lS --> lista y ordena directorios y archovis por tama√±o
    * ls -lr --> lista y ordena directorios y archovis en orden inverso al orden alfabetico
    * cd --> para cambiar de directorio
    * cd .. --> me lleva una carpeta atras
    * cd /carpeta a la que quiero ir --> para avanzar una carpeta adelante
    * cd / --> para ir directo al directorio home o root
    * cd mnt --> para ir a las carpetas de windows
    * cd ~ --> me lleva a mi carpeta home
    * mkdir nombreArchivo --> para crear una carpeta 
    * sudo mkdir --> crear un directorio con permiso de administrador
    * touch nombreArchivoQueQuieroCrear --> para crear un archivo
    * cat archivoQueQuieroAbrir --> para ver en consola un archivo
    * tree --> Para ver archivos, Este despliega todo los directorios como un arbol
    * tree -L nivelQueQuieroProfundizar --> Para ver archivos, Este despliega todo los directorios como un arbol
    * man app que quiero ver su manual --> para ver las instrucciones de la aplicacion    
    * help <comando> --> muestra una ayuda del comando
    * info <comando> --> para ver info del comando
    * whatis <comando> --> muestra una info resumida del comando 
    * mv archivoQueQUieroMover carpetaAlaQueVoyAmover --> para mover un archivo a otro directorio 
    * mv archivoQueQUieroMover nuevoNombre --> para cambiar de nombre a un archivo 
    * rm nombreArchivoQueQuieroBorrar.extension --> para borrar un solo archivo
    * rm -d nombreCarpetaVacia --> Para borrar una carpeta vacia
    * rm -r nombreCarpetaQueQuieroBorrar --> para borrar una carpeta llena 
    * rm -ri nombreCarpetaQueQuieroBorrar --> para borrar una carpeta llena de forma recursiva 
    * rm -rf nombreCarpetaQueQuieroBorrar --> para borrar una carpeta llena MUY PELIGROSA BORRA TODO
        * -i (de interactive) te pregunta si est√°s seguro de eliminar el archivo
        * -r (de recursive) elimina todo lo que est√© dentro de una carpeta
        * -f (de force) fuerza a borrar todo.
    * file nombreArchivo--> me da la informaci√≥n acerca del archivo que quiero
    * cp nombreDelArchivo nombreDeLaCopia --> para copiar archivos (este lo haria en el mismo directorio)
    * cp nombreDelArchivo nombreDeLaCopia --> para copiar archivos (este lo haria en el mismo directorio)
    * cp nombreDelArchivo ruta/nombreDeLaCopia --> para copiar archivos (este lo haria en el directorio que elija)
    
QUE ES UN COMANDO 
    un comando pueden ser 4 cosas
    1. Un programa ejecutable
    2. Un comando de utilidad de la shell. Esto es un programa en s√≠ mismo, que puede tener funciones. Ejemplo cd
    3. Una funci√≥n de shell. Son funciones de shell externas al comando de utilidad. Ejemplo mkdir
    4. Un alias. Un ejemplo es ls

    * type <comando>: Nos permite conocer que tipo de comando es ü§î
    * alias l="<secuencia de comandos>": Nos permite crear comandos. Son temporales, se borran al cerrar la terminal üë∂üèº

WILDCARDS 
    Las wildcards o comodines son una serie de caracteres especiales que nos permiten encontrar patrones 
    o realizar b√∫squedas m√°s avanzadas. Es aplicable para archivos y directorios.

    Las wildcards te sirven para realizar seccionamiento de archivos o directorios, ademas de ls los 
    wildcards tambien pueden usarse con cualquier comando que realice la manipulaci√≥n de archivos como mv, 
    cp y rm.

    por ejemplo buscar todos los archivos que terminen con .txt o todos los archivos que sean html

Tipos de wildcards
    Buscar todo (*)
    El asterisco te ayuda a buscar toda la informaci√≥n dentro de una carpeta, pero puedes limitar su uso. 
    Si por ejemplo quieres buscar los archivos que tengan una extensi√≥n ‚Äú.png‚Äù, escribes:
    
        * ls *.txt --> busca todas las coincidencias que terminan en .txt
        * ls *.html --> busca todas las coincidencias que terminan en .html
        * ls -l *.png --> busca todas las coincidencias que terminan en .png
        * ls datos* --> busca todas las coincidencias con datos

    Buscar por cantidad de caracteres (?)
        Si dentro de tus archivos tuvieras una especie de c√≥digo para guardar tus fotos, algo as√≠ como ‚Äúfoto1.png‚Äù, ‚Äúfoto2.png‚Äù, ‚Äúfoto3.png‚Äù, etc. En este caso, sabemos que primero tenemos el string ‚Äúfoto‚Äù, luego un solo n√∫mero y por √∫ltimo la extensi√≥n ‚Äú.png‚Äù.

        Si quisieras buscar esas fotos escribir√≠as:
        * ls -l foto?.png --> busca todos las coincidencias con foto al inicio y 1 caracter diferente al final
        * ls datos? --> busca todos las coincidencias con datos al inicio y 1 caracter diferente al final

        Aqu√≠ est√°s indicando:
        Busca todo lo que comience por la cadena de caracteres ‚Äúfoto‚Äù
        Que inmediatamente despu√©s tenga un solo caracter
        Y que al final tenga la cadena de caracteres ‚Äú.png‚Äù
        
        Pero si sabes que no tiene un solo caracter, sino que tiene varios, entonces escribes tantos 
        signos de interrogaci√≥n como caracteres existan. Por ejemplo, si quieres buscar las fotos que
        tengan esta estructura ‚Äúfoto11.jpg‚Äù, escribes:
        * ls -l foto??.jpg
        * ls datos??? --> busca todas las coincidencias con datos al inicio y 3 caracteres diferntes al final

        Tambi√©n puedes combinar wildcards. Por ejemplo, si sabes que tus fotos siguen esta especie de c√≥digo, 
        pero no sabes que extensi√≥n tienen, escribes:

        * ls -l foto?.*

        Aqu√≠ est√°s indicando:
        Busca todo lo que comience por ‚Äúfoto‚Äù
        Que inmediatamente despu√©s tenga un solo caracter
        Y que tenga lo que sea despu√©s del punto

    Buscar por caracteres espec√≠ficos ([])
        Si quieres buscar por varios caracteres espec√≠ficos se usan corchetes. Para utilizarlos tienes que colocar dentro de los corchetes los caracteres que quieres buscar.

        Por ejemplo, si quisieras buscar los archivos que comiencen por las letras ‚Äúc‚Äù o ‚Äúi‚Äù, entonces escribes:
        
        * ls [ad]* --> creo una clase para buscar archivos que inicien con a o con d en este caso
        * ls -l [ci]*

        Lo que indica el comando es que busque los archivos que comiencen por la letra ‚Äúc‚Äù o por la letra ‚Äúi‚Äù 
        y que tengan lo que sea por delante. Cuando buscamos con esta wildcard ten en cuenta que es case
         sensitive, por lo que la letra ‚Äúi‚Äù no es lo mismo que la letra ‚ÄúI‚Äù.

        * ls -l [cCiI]*ls -l foto[2-6]*

    Por √∫ltimo, si quieres buscar por rango de n√∫meros tambi√©n tienes que usar esta wildcard. 
    Para hacerlo, escribe el rango de n√∫meros que quieres buscar separados por un guion.

        * ls -l foto[2-6]*

        Lo que indica ese comando es:

        Busca todo lo que comience por la cadena de texto ‚Äúfoto‚Äù
        Que justo despu√©s tenga un n√∫mero entre el 2 y el 6
        Y que tenga lo que sea por delante.

        
        * ls [[:upper:]]* --> busca todas las coincidencias que inicien con mayuscula
        * ls -d [[:upper:]]* --> busca los directorios que inician con mayuscula
        * ls -d [[:lower:]]* --> busca los directorios que iinician con minuscula
